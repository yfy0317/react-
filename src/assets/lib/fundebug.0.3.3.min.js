!(function(e) {
  function t() {
    let e = document.currentScript;
    if (!e) {
      const t = document.scripts;
      e = t[t.length - 1];
    }
    return e;
  }
  function r(e, t, r) {
    const n = e[t];
    e[t] = r(n);
  }
  function n(e) {
    return typeof e !== "function"
      ? e
      : (e.__injected__ ||
          (e.__injected__ = function() {
            try {
              return e.apply(this, arguments);
            } catch (e) {
              throw (s(e), (w = !0), e);
            }
          }),
        e.__injected__);
  }
  function a(e, t) {
    const r = /^[0-9a-z]{64}$/i;
    return e
      ? !!e.match(r) || (t || console.error("Fundebug: apikey格式错误"), !1)
      : (t || console.error("Fundebug: 请配置apikey"), !1);
  }
  function i(t) {
    if (!t) return null;
    let r = {};
    return (
      e.XMLHttpRequest
        ? (r = {
            name: t.name,
            message: t.message,
            fileName: t.fileName || t.sourceURL,
            lineNumber: t.lineNumber || t.line,
            columnNumber: t.columnNumber || t.column
          })
        : (r.message = t.message),
      r
    );
  }
  function o() {
    let e;
    try {
      throw new Error("");
    } catch (t) {
      e = t.stack;
    }
    if (e) {
      return (
        (e = e.replace(/(.*?)fundebug(.*?)\.js(.*)\n?/gm, "")),
        (e = e.replace(/^Error\n/g, "")),
        (e = `generated-stack:\n${e}`)
      );
    }
  }
  function u() {
    for (
      var e, t = [], r = arguments.callee.caller.caller;
      r && t.length < 10;

    ) {
      const n = r.toString().match(/function\s*([\w\_$]+)?\s*\(/i);
      (e = (n && n[1]) || "[anonymous]"), t.push(e), (r = r.caller);
    }
    return `generated-stack:\n${t.join("\n")}`;
  }
  function s(e) {
    if (e) {
      let t = e.stack;
      t = t.replace(/(.*?)fundebug(.*?)\.js(.*)\n?/gm, "");
      const r = i(e);
      h({
        name: r.name || "uncaught error",
        message: r.message,
        fileName: r.fileName,
        lineNumber: r.lineNumber,
        columnNumber: r.columnNumber,
        stacktrace: t,
        severity: "error",
        type: "uncaught"
      });
    }
  }
  function c(t) {
    if (!L.silentResource && !t.message) {
      let r;
      r = t.target ? t.target : t.srcElement;
      let n = r && r.outerHTML;
      n && n.length > 200 && (n = n.slice(0, 200));
      const a = {
        type: "resourceError",
        target: {
          outerHTML: n,
          src: r && r.src,
          tagName: r && r.tagName,
          id: r && r.id,
          className: r && r.className,
          name: r && r.name,
          type: r && r.type,
          XPath: l(r),
          selector: m(r),
          timeStamp: t.timeStamp
        }
      };
      if (
        r.src !== e.location.href &&
        (!r.src || !r.src.match(/.*\/(.*)$/) || r.src.match(/.*\/(.*)$/)[1]) &&
        a.target.src &&
        e.XMLHttpRequest
      ) {
        const i = new XMLHttpRequest();
        (i.Fundebug = !0),
          i.open("HEAD", a.target.src),
          i.send(),
          (i.onload = function(e) {
            e.target.status !== 200 &&
              ((a.target.status = e.target.status),
              (a.target.statusText = e.target.statusText)),
              h(a);
          });
      }
    }
  }
  function l(e) {
    for (var t = []; e && e.nodeType == Node.ELEMENT_NODE; e = e.parentNode) {
      var r,
        n = 0,
        a = !1;
      for (r = e.previousSibling; r; r = r.previousSibling) {
        r.nodeType != Node.DOCUMENT_TYPE_NODE &&
          r.nodeName == e.nodeName &&
          ++n;
      }
      for (r = e.nextSibling; r && !a; r = r.nextSibling) {
        r.nodeName == e.nodeName && (a = !0);
      }
      let i = (e.prefix ? `${e.prefix}:` : "") + e.localName,
        o = n || a ? `[${n + 1}]` : "";
      t.splice(0, 0, i + o);
    }
    return t.length ? `/${t.join("/")}` : null;
  }
  function m(e) {
    for (var t = []; e.parentNode; ) {
      if (e.id) {
        t.unshift(`#${e.id}`);
        break;
      }
      if (e == e.ownerDocument.documentElement) t.unshift(e.tagName);
      else {
        for (
          var r = 1, n = e;
          n.previousElementSibling;
          n = n.previousElementSibling, r++
        );
        t.unshift(`${e.tagName}:nth-child(${r})`);
      }
      e = e.parentNode;
    }
    return t.join(" > ");
  }
  function f(e) {
    x.push(e), x.length > 20 && x.shift();
  }
  function p(t) {
    let r;
    r = t.target ? t.target : t.srcElement;
    let n = r && r.outerHTML;
    n && n.length > 200 && (n = n.slice(0, 200)),
      f({
        type: "click",
        page: { url: e.location.href, title: document.title },
        detail: {
          outerHTML: n,
          tagName: r && r.tagName,
          id: r && r.id,
          className: r && r.className,
          name: r && r.name
        },
        time: new Date().getTime()
      });
  }
  function d(e, t) {
    (M = t),
      f({
        type: "navigation",
        detail: { from: e, to: t },
        time: new Date().getTime()
      });
  }
  function g(t) {
    const r = console[t];
    console[t] = function() {
      if (
        (f({
          type: "console",
          page: { url: e.location.href, title: document.title },
          detail: {
            level: t,
            arguments: Array.prototype.slice.apply(arguments).join(" ")
          },
          time: new Date().getTime()
        }),
        typeof r === "function")
      ) {
        if (r.apply) r.apply(console, arguments);
        else {
          const n = Array.prototype.slice.apply(arguments).join(" ");
          r(n);
        }
      }
    };
  }
  function v(e) {
    return (
      !L.silentHttp &&
      ((e.detail.status !== 0 || !/^file:\/\/\//.test(e.detail.url)) &&
        parseInt(e.detail.status / 100) !== 2)
    );
  }
  function h(t) {
    if (
      a(D.getAttribute("apikey") || L.apikey) &&
      L.maxEventNumber &&
      !L.silent
    ) {
      L.maxEventNumber -= 1;
      const r = {
        notifierVersion: "0.3.3",
        userAgent: e.navigator.userAgent,
        locale: e.navigator.language || e.navigator.userLanguage,
        url: e.location.href,
        title: document.title,
        appVersion: D.getAttribute("appversion") || L.appversion,
        apiKey: D.getAttribute("apikey") || L.apikey,
        releaseStage: D.getAttribute("releasestage") || L.releasestage,
        metaData: t.metaData || L.metaData,
        user: t.user || L.user,
        name: t.name,
        time: new Date().getTime(),
        message: t.message,
        fileName: t.fileName,
        lineNumber: t.lineNumber,
        columnNumber: t.columnNumber,
        stacktrace: t.stacktrace,
        type: t.type,
        severity: t.severity,
        target: t.target,
        req: t.req,
        res: t.res,
        breadcrumbs: x
      };
      (r.userAgent && r.userAgent.match(/Googlebot/)) || y(r) || T(r);
    }
  }
  function y(e) {
    const t = L.filters;
    if (!t || !t.length) return !1;
    for (let r = 0; r < t.length; r++) if (b(e, t[r])) return !0;
    return !1;
  }
  function b(e, t) {
    if (!e) return !1;
    if (Object.keys && !Object.keys(t).length) return !1;
    for (const r in t) {
      if (t.hasOwnProperty(r)) {
        if (t[r].constructor === RegExp) {
          if (!t[r].test(e[r])) return !1;
        } else {
          if (t[r].constructor !== Object) return !1;
          if (!b(e[r], t[r])) return !1;
        }
      }
    }
    return !0;
  }
  function N(e) {
    if (typeof JSON !== "undefined") return JSON.stringify(e);
    if (e instanceof Array) {
      for (var t = [], r = 0; r < e.length; r++) t.push(N(e[r]));
      return `[${t.join(",")}]`;
    }
    const n = [];
    for (const a in e) {
      if (e.hasOwnProperty(a)) {
        let i = `"${a}":`,
          o = e[a];
        o &&
          (typeof o === "object"
            ? (i += N(o))
            : typeof o === "number"
            ? (i += o)
            : (i = `${i}"${o.replace(/\n/g, "\\n")}"`),
          n.push(i));
      }
    }
    return `{${n.join(",")}}`;
  }
  function E(e) {
    let t;
    try {
      t = N(e);
    } catch (r) {
      delete e.metaData;
      try {
        t = N(e);
      } catch (e) {
        return;
      }
    }
    return t;
  }
  function T(t) {
    const r = E(t);
    if (r) {
      const n = k;
      if (e.XMLHttpRequest && e.atob) {
        const a = new XMLHttpRequest();
        (a.Fundebug = !0),
          a.open("POST", n),
          a.setRequestHeader("Content-Type", "application/json"),
          a.send(r);
      } else {
        new Image().src = `${n}?event=${encodeURIComponent(r)}`;
      }
    }
  }
  var k = "https://fundebug.com/javascript/",
    L = {};
  e.fundebug = L;
  var w = !1,
    D = t();
  (L.silent = D.getAttribute("silent") || !1),
    (L.maxEventNumber = D.getAttribute("maxEventNumber") || 10),
    (L.silentResource = D.getAttribute("silentResource") || !1),
    (L.silentHttp = D.getAttribute("silentHttp") || !1),
    r(
      e,
      "onerror",
      () =>
        function(t, r, n, a, o) {
          if (w) return void (w = !1);
          void 0 === a && e.event && (a = e.event.errorCharacter);
          let s;
          s = r && r !== e.location.href ? r : null;
          const c = i(o);
          return (
            h({
              message: t,
              lineNumber: n,
              columnNumber: a,
              fileName: s || (c && c.fileName),
              name: (c && c.name) || "uncaught error",
              stacktrace: (o && o.stack) || u(),
              severity: "error",
              type: "uncaught"
            }),
            !1
          );
        }
    );
  let H = !0;
  if (e.atob) {
    if (e.ErrorEvent) {
      try {
        e.ErrorEvent.prototype.hasOwnProperty("error") && (H = !1);
      } catch (e) {}
    }
  } else H = !1;
  "EventTarget Window Node ApplicationCache AudioTrackList ChannelMergerNode CryptoOperation EventSource FileReader HTMLUnknownElement IDBDatabase IDBRequest IDBTransaction KeyOperation MediaController MessagePort ModalWindow Notification SVGElementInstance Screen TextTrack TextTrackCue TextTrackList WebSocket WebSocketWorker Worker XMLHttpRequest XMLHttpRequestEventTarget XMLHttpRequestUpload".replace(
    /\w+/g,
    t => {
      if (H) {
        const a = e[t] && e[t].prototype;
        a &&
          a.hasOwnProperty &&
          a.hasOwnProperty("addEventListener") &&
          (r(
            a,
            "addEventListener",
            e =>
              function(t, r, a, i) {
                return (
                  r && r.handleEvent && (r.handleEvent = n(r.handleEvent)),
                  e.call(this, t, n(r), a, i)
                );
              }
          ),
          r(
            a,
            "removeEventListener",
            e =>
              function(t, r, a) {
                return e.call(this, t, r, a), e.call(this, t, n(r), a);
              }
          ));
      }
    }
  ),
    (L.notify = function(e, t, r) {
      if (e) {
        let n = {
            name: e || (r && r.name),
            message: t || (r && r.message),
            severity: (r && r.message) || "warning",
            stacktrace: o(),
            type: "notification",
            user: r && r.user,
            metaData: r && r.metaData
          },
          i = D.getAttribute("apikey") || L.apikey;
        return a(i, !0)
          ? (h(n),
            location.host === "fundebug.com"
              ? "亲，不要在Fundebug网站测试哦；请将Fundebug插件集成到您的网站，然后进行测试!"
              : "请查看邮箱以及Fundebug控制台!")
          : i
          ? "apikey格式错误"
          : "请配置apikey";
      }
    }),
    (L.notifyError = function(t, r) {
      if (t) {
        e.console && console.error(t);
        const n = i(t);
        h({
          name: n.name || (r && r.name) || "caught error",
          message: n.message || (r && r.message),
          stacktrace: t.stack,
          fileName: n.fileName,
          lineNumber: n.lineNumber,
          columnNumber: n.columnNumber,
          severity: (r && r.severity) || "error",
          type: "caught",
          user: r && r.user,
          metaData: r && r.metaData
        });
      }
    }),
    (L.notifyHttpError = function(e, t, r) {
      h({
        type: "httpError",
        req: e,
        res: t,
        user: r && r.user,
        metaData: r && r.metaData
      });
    }),
    e.addEventListener &&
      e.addEventListener("unhandledrejection", e => {
        L.notifyError(e.reason);
      }),
    e.addEventListener && e.addEventListener("error", c, !0);
  var x = [];
  e.addEventListener
    ? e.addEventListener("click", p, !0)
    : document.attachEvent("onclick", p);
  var M = { url: e.location.href };
  document.addEventListener
    ? document.addEventListener("DOMContentLoaded", () => {
        M = { url: e.location.href, title: document.title };
      })
    : document.attachEvent("onreadystatechange", () => {
        M = { url: e.location.href, title: document.title };
      });
  const R = e.onpopstate;
  e.onpopstate = function() {
    const t = { url: e.location.href };
    if (
      (M.title || (M.title = document.title), M.url !== t.url && d(M, t), R)
    ) {
      return R.apply(this, arguments);
    }
  };
  const S = e.history.pushState;
  e.history.pushState = function() {
    M = { url: e.location.href, title: document.title };
    const t = {};
    if (
      (arguments.length === 3 && (t.url = arguments[2]),
      M.url !== t.url && d(M, t),
      S)
    ) {
      return S.apply(this, arguments);
    }
  };
  const j = e.onhashchange;
  e.onhashchange = function() {
    const t = { url: e.location.href, title: document.title };
    if ((M.url !== t.url && d(M, t), j)) return j.apply(this, arguments);
  };
  for (
    let A = ["log", "warn", "error", "debug", "info"], q = 0;
    q < A.length;
    q++
  ) {
    e.console && g(A[q]);
  }
  let O = !1;
  if (e.XMLHttpRequest) {
    const _ = XMLHttpRequest.prototype;
    if (!_) return;
    let X,
      C,
      F,
      P = _.open;
    _.open = function(e, t) {
      (X = e), (C = t), (F = new Date().getTime());
      try {
        P.apply(this, arguments);
      } catch (e) {
        (O = !0),
          L.notifyError(e, {
            metaData: {
              description:
                "XMLHttpRequest请求失败(如果是拒绝访问，则是由于浏览器跨域限制)",
              method: X,
              httpUrl: C
            }
          });
      }
    };
    const I = _.send;
    _.send = function() {
      if (O) return void (O = !1);
      let t = this,
        r = t.onreadystatechange;
      (t.onreadystatechange = function() {
        if (t.readyState === 4 && !t.Fundebug && C != k) {
          let n = new Date().getTime() - F,
            a = {
              type: "XMLHttpRequest",
              page: { url: e.location.href },
              detail: {
                method: X,
                url: t.responseURL || C,
                status: t.status,
                statusText: t.statusText
              },
              elapsedTime: n,
              time: F
            };
          if (v(a)) {
            let i = { method: a.detail.method, url: a.detail.url },
              o = {
                status: t.status,
                statusText: t.statusText,
                response: t.response,
                elapsedTime: n
              };
            L.notifyHttpError(i, o);
          }
          f(a);
        }
        r && r.apply(this, arguments);
      }),
        I.apply(this, arguments);
    };
  }
  if (e.fetch) {
    const U = e.fetch;
    e.fetch = function(t, r) {
      const n = new Date().getTime();
      return U.apply(this, arguments).then(t => {
        let a = new Date().getTime() - n,
          i = {
            type: "fetch",
            page: { url: e.location.href, title: document.title },
            detail: {
              method: (r && r.method) || "GET",
              url: t.url,
              status: t.status,
              statusText: t.statusText
            },
            elapsedTime: a,
            time: n
          };
        if (v(i)) {
          let o = { method: i.detail.method, url: i.detail.url },
            u = {
              status: t.status,
              statusText: t.statusText,
              elapsedTime: a
            };
          L.notifyHttpError(o, u);
        }
        return f(i), t;
      });
    };
  }
  let W = typeof define === "function",
    $ = typeof module !== "undefined" && module.exports;
  W ? define(L) : $ && (module.exports = L);
})(window);
